#+TITLE: Notes on: Computer networking: a top-down approach by Kurose, J. F., & Ross, K. W. (2017)
#+Time-stamp: <2021-05-20 19:18:53 boxx>

- source :: cite:kurose-2017-comput-networ

* TODO Summary
* TODO Comments
* TODO Topics

** What is the internet?

*** Nuts-and-Bolts Description

The internet is a computer network that interconnects billions of computing devices throughout the world. In internet jargon, all [of these example devices] are called *hosts* or *end systems*. End systems are connected together by a network of *communication links* and *packet switches*. There are many types of communication links, which are made up of different types of physical media, including coaxial cable, copper wire, optical fiber, and radio spectrum. Different links can transmit data at different rates, with the *transmission rate* of a link measured in bits/second. When one end system has data to send to another end system, the sending end system segments the data and adds header bytes to each segment. The resulting packages of information, known as *packets* in the jargon of computer networks, are then sent through the network to the destination end system, where they are reassembled into the original data.

A packet switch takes a packet arriving on one of it incoming communication links and forwards that packet on one of its outgoing communication links. Packet switches come in many shapes and flavors, but the two most prominent types in today's internet are *routers* and *link-layer switches*. Both types of switches forward packets toward their ultimate destinations. Link-layer switches are typcially used in access networks, while routers are typically used in the network core.

The sequence of communication links and packet switches traversed by a packet from the sending end system to the receiving end system is known as a *route* or *path* through the network. Packet-switched networks are in many ways similar to transportation networks of highways, roads, and intersections ... packets are analogous to trucks, communication links are analogous to highways/roads, packet switches are analogous tointersections, and end systems are analogous to buildings.

End systems access the internet through *Internet Service Providers*, or *ISPs*. Each ISP is in itself a network of packet switches and communication links. The internet is all about connecting end systems to each other, so the ISPs tgat provide access to end systems /must also be interconnected/. Each ISP network (whether upper-tier or lower-tier), is managed independently, runs the IP protocol, and conforms to certain naming and address conventions.

End systems, packet switches, and other pieces of the internet run *protocols* that control the sending and receiving of information within the internet. The *Transmission Control Protocol* and the *Internet Protocol* are two of the most important protocols in the internet. The internet's principal protocols are known collectively as *TCP/IP*.

*** Services Decription

We can also describe the internet from an entirely different angle - namely, as /an infrastructure that provides services to applications/. The applications are said to be *distributed applications*, since they involve multiple end systems that exchange data with each other.

Importantly, internet applications run on end systems - they do *not* run in the packet switches in the network core. Although packet switches facilitate the exchange of data among end systems, they are *not* concerned with the application that is the source or sink of data.

How does one program running on one send system instruct the internet to deliver data to another program running on another end system?

End systems attached to the internet provide a *socket interface* that specifies how a program running on one end system asks the internet infrastructure to deliver data to a specific destination program running on another end system. This internet socket interface is a set of rules that the sending program /must/ follow so that the internet can deliver the data to the destination program.

** What is a Protocol?

Note that in our human protocol example, /there are specific messages we send, and specific actions we take in response to the received reply messages or other events/. ... . The same is true of networking - it takes two (or more) communicating entities running the same protocol in order to accomplish a task.

*** Network Protocol

A network protocol is similar to a human protocol, except that the entities exchanging messages and taking actions are hardware or software components of some device. *All activity in the Internet that involves two or more communicating remote entities is governed by a protocol.*

Given the human and networking examples given previously, the exchange of messages and the actions taken when these messages are sent/received are the key defining elements of a protocol:

#+BEGIN_QUOTE
A *protocol* defines the format and the order of messages exchanged between two or more communicating entities, as well as the actions taken on the transmission and/or receipt of a message or other event.
#+END_QUOTE
