#+TITLE: Notes on: Computer networking: a top-down approach by Kurose, J. F., & Ross, K. W. (2017)
#+Time-stamp: <2021-05-30 18:04:46 boxx>

- source :: cite:kurose-2017-comput-networ

* TODO Summary
* TODO Comments
* TODO Topics

** What is the internet?

*** Nuts-and-Bolts Description

The internet is a computer network that interconnects billions of computing devices throughout the world. In internet jargon, all [of these example devices] are called *hosts* or *end systems*. End systems are connected together by a network of *communication links* and *packet switches*. There are many types of communication links, which are made up of different types of physical media, including coaxial cable, copper wire, optical fiber, and radio spectrum. Different links can transmit data at different rates, with the *transmission rate* of a link measured in bits/second. When one end system has data to send to another end system, the sending end system segments the data and adds header bytes to each segment. The resulting packages of information, known as *packets* in the jargon of computer networks, are then sent through the network to the destination end system, where they are reassembled into the original data.

A packet switch takes a packet arriving on one of it incoming communication links and forwards that packet on one of its outgoing communication links. Packet switches come in many shapes and flavors, but the two most prominent types in today's internet are *routers* and *link-layer switches*. Both types of switches forward packets toward their ultimate destinations. Link-layer switches are typcially used in access networks, while routers are typically used in the network core.

The sequence of communication links and packet switches traversed by a packet from the sending end system to the receiving end system is known as a *route* or *path* through the network. Packet-switched networks are in many ways similar to transportation networks of highways, roads, and intersections ... packets are analogous to trucks, communication links are analogous to highways/roads, packet switches are analogous tointersections, and end systems are analogous to buildings.

End systems access the internet through *Internet Service Providers*, or *ISPs*. Each ISP is in itself a network of packet switches and communication links. The internet is all about connecting end systems to each other, so the ISPs tgat provide access to end systems /must also be interconnected/. Each ISP network (whether upper-tier or lower-tier), is managed independently, runs the IP protocol, and conforms to certain naming and address conventions.

End systems, packet switches, and other pieces of the internet run *protocols* that control the sending and receiving of information within the internet. The *Transmission Control Protocol* and the *Internet Protocol* are two of the most important protocols in the internet. The internet's principal protocols are known collectively as *TCP/IP*.

*** Services Decription

We can also describe the internet from an entirely different angle - namely, as /an infrastructure that provides services to applications/. The applications are said to be *distributed applications*, since they involve multiple end systems that exchange data with each other.

Importantly, internet applications run on end systems - they do *not* run in the packet switches in the network core. Although packet switches facilitate the exchange of data among end systems, they are *not* concerned with the application that is the source or sink of data.

How does one program running on one send system instruct the internet to deliver data to another program running on another end system?

End systems attached to the internet provide a *socket interface* that specifies how a program running on one end system asks the internet infrastructure to deliver data to a specific destination program running on another end system. This internet socket interface is a set of rules that the sending program /must/ follow so that the internet can deliver the data to the destination program.

** What is a Protocol?

Note that in our human protocol example, /there are specific messages we send, and specific actions we take in response to the received reply messages or other events/. ... . The same is true of networking - it takes two (or more) communicating entities running the same protocol in order to accomplish a task.

*** Network Protocol

A network protocol is similar to a human protocol, except that the entities exchanging messages and taking actions are hardware or software components of some device. *All activity in the Internet that involves two or more communicating remote entities is governed by a protocol.*

Given the human and networking examples given previously, the exchange of messages and the actions taken when these messages are sent/received are the key defining elements of a protocol:

#+BEGIN_QUOTE
A *protocol* defines the format and the order of messages exchanged between two or more communicating entities, as well as the actions taken on the transmission and/or receipt of a message or other event.
#+END_QUOTE

** The Network Edge

Recall from the previous section that in computer networking jargon, the computers and other devices connected to the internet are often referred to as end systems. The internet's end systems include desktop computers, servers, mobile devices, and an increasing number of non-traditional "things" being attached to the internet as end systems. End systems are alos referred to as /hosts/ because they host (i.e., "run") application programs such as a Web browser program, a Web server program, an e-mail client program, or an e-mail server program. The terms /hosts/ and /end systems/ are often used interchangeably; that is, /host = end system/.

Hosts are sometimes further divided into two categories:

  1. *clients* - informally, these tend to be desktop and mobile PCs, smartphones, and so on
  2. *servers* - informally, these tend to be more powerful machines that store and distribute Web pages, stream video, relay e-mail, etc.

** Access Networks

A network that physically connects an end system to any other distant end system can be categorized as an access network.

*** Home Access: DSL, Cable, FTTH, Dial-Up, and Satellite

Today, the two most prevalent types of broadband residential access are *digital subscriber line (DSL)* and cable. A residence typically obtains DSL internet access from the same local telephone company (telco) that provides its wired local phone access. Thus, when DSL is used, a customer's telco is also its ISP. Each customer's DSL modem uses the existing telephone line (twisted-pair copper wire) to exchange data with a digital subscriber line access multiplexer (DSLAM) located in the telco's local central office (CO). The home's DSL modem takes digital data and translates it to high-frequency tones for transmission over telephone wires to the CO; the analog signals from many such houses are translated back into digital format at the DSLAM.

The residential telephone line carries both data and traditional telephone signals simultaneaously, which are encoded in different frequencies:

  - a high-speed downstream channel, in the 50 kHz to 1 MHz band
  - a medium-speed upstream channel, in the 4 kHz to 50 kHz band
  - an ordinary two-way telephone channel, in the 0 to 4 kHz band

This approach makes the single DSL link appear as if there were three (3) separate links, so that a telephone call and an internet connection can share the DSL link at the same time. On the customer side, a splitter separates the data and telephone signals arriving to the home and forwards the data signal to the DSL modem. On the telco side, in the CO, the DSLAM separates the data and phone signals and sends the data into the internet. Hundreds or even thousands of households connect to a single DSLAM.

The DSL standards define multiple transmission rates, including 12 Mbps downstream and 1.8 Mbps upstream [ITU 1999], and 55 Mbps downstream and 15 Mbps upstream [ITU 2006]. Because the downstream and upstream rates are different, the access is said to be /asymmetric/. The actual downstream and upstream transmission rates achieved may be less than the rates noted above, as the DSL provider may purposefully limit a residential rate when tiered services are offered. The maximum rate is also limited by the distance between the home and the CO, the gauge of the twisted-pair line and the degree of electrical interference.

While DSL makes use of the telco's existing local telephone infrastructure, *cable internet access* makes use of the cable television company's existing cable television infrastructure. A residence obtains cable internet access from the same company that provides its cable television. Fiber optics connect the cable head end to the neighborhood-level junctions, from which traditional coaxial cable is then  used to reach individual houses and apartments. Each neighborhood junction typically supports 500 to 5,000 homes. Because both /fiber/ and /coaxial/ cable are employed in this system, it is often referred to as /hybrid fiber coax (HFC)/.

Cable internet access requires special modems, call cable modems. As with a DSL modem, the cable modem is typcially an external device that connects to the home PC through an Ethernet port. At the cable head end, the cable modem termination system, or CMTS, serves a similar function as the DSL network's DSLAM - turning the analog signal sent from the cable modems in many downstream homes back into digital format. Cable modems divide the HFC network into two (2) channels, a downstream channel and an upstream channel. As with DSL, access is typcially /asymmetric/, with the downstream channel typically allocated a higher transmission rate than the upstream channel.

The DOCSIS (Data-Over-Cable Service Interface Specifications) 2.0 standard defines downstream rates up to 42.8 Mbps and upstream rates of up to 30.7 Mbps. As in the case of DSL networks, the maximum achievable rate may not be realized due to lower contracted data rates or media impairments.

One important characteristic of cable internet access is that it is a /shared broadcast medium/. In particular, every packet sent by the head end travels downstream on every link to every home and every packet sent by a home travels on the upstream channel to the head end. For this reason, if several users are simultaneously downloading a video file on the downstream channel, the actual rate at which each user received its video file will be significantly lower than the aggregate cable downstream rate. On the other hand, if there are only a few active users and they are all Web surfing, then each of the users may actually receive Web pages at the full cable downstream rate, because the users will rarely request a Web page at exactly the same time. Because the upstream channel is also shared, a distributed multiple access protocol is needed to coordinate transmissions and avoid collisions.

Although DSL and cable networks currently represent more than 85 percent of residential broadband access in the United States, an up-and-coming technology that provides even higher speeds is the *fiber to the home (FTTH)*. As the name suggests, the FTTH concept is simple - provide an optical fiber path from the CO directly to the home.

There are several competing technologies for optical distribution from the CO to the homes. The simplest optical distribution network is called /direct fiber/, with one fiber leaving the CO for each home. More commonly, each fiber leaving the central office is actually shared by many homes; it is not until the fiber gets relatively close to the homes that it is split into individual customer-specific fibers.

There are two (2) competing optical-distribution network architectures that perfrom this splitting:

  1. *active optical networks (AONs)* - essentially switched Ethernet .... more on this later
  2. *passive optical networks (PONs)* - each home has an optical network terminator (ONT) which is connected by dedicated optical fiber to a neighborhood splitter; the splitter combines a number of individual ONTs onto a single, shared optical fiber which connects to an optical line terminator (OLT) in the telco's CO; the OLT, providing conversion between optical and electrical signals connects to the internet via a telco router; in the home, users connect a home router (typically a wireless router) to the ONT and access the internet via this home router; in the PON architecture, all packets sent from OLT to the splitter are replicated at the splitter (similar to a cable head end)

Two other access network technologies are also used to provide internet access to the home. In locations where DSL, cable, and FTTH are not available (e.g., some rural settings), a satellite link can be used to connect a residence to the internet. Dial-up access over traditional phone lines is based on the same model as DSL - a home modem connects over a phone line to a modem in the ISP.

*** Access in the Enterprise (and the Home): Ethernet and WiFi

On corporate and university campuses, and increasingly in home settings, a local area network, or LAN, is used to connect an end system to the edge router. Although there are many types of LAN technologies, Ethernet is by far the most prevalent access technology in corporate, university, and home networks. Ethernet users use twisted-pair copper wire to connect to an Ethernet switch. The Ethernet switch, or a network of interconnected switches, is then in turn connected into the larger internet.

Increasingly, however, people are accessing the internet wirelessly from laptops, phones, tablets, and other "things". In a wireless LAN setting, wireless users transmit/receive packets to/from an access point that is connected into the enterprise's network (most likely using wired Ethernet), which in turn is connected to a wired internet. A wireless LAN user must typcially be within a few tens of meters of the access point. Wireless LAN access based on IEEE 802.11 technology, more colloquially known as *WiFi*, is now just about everywhere. As discussed in detail in Chapter 7, 802.11 today provides a shared transmission rate of up to more than 100 Mbps.

Even though Ethernet and WiFi access networks were initially deployed in enterprise (sorporate, university) settings, they have recently become relatively common components of home networks. Many homes compbine broadband residential access (that is, cable modems or DSL) with these inexpensive wireless LAN technologies to create powerful home networks.

Figure 1.9 on page 18 shows a typical home network. This home network consists of a roaming laptop as well as a wired PC; a base station (the wireless access point), which communicates with the wireless PC and other wireless devices in the home; a cable modem, providing broadband access to the internet; and a router, which interconnects the base station and the stationary PC with the cable modem.

Telecommunications companies have made enormous investments in so-called third-generation (3G) wireless, which provides packet-switched wide-area wireless internet access at speeds in excess of 1 Mbps. But even higher-speed wide-area access technologies - a fourth-generation (4G) of wide-area wireless networks - are already being deployed. LTE (for "Long-Term Evolution") has its roots in 3G technology, and can achieve rates in excess of 10 Mbps.

** Physical Media

In order to define what is meant by a physical medium, let us reflect on the brief life of a bit.

Consider a bit traveling from one end system, through a series of links and routers, to another end system. This poor bit gets kicked around and transmitted many, many times! The source end system first transmits the bit, and shortly thereafter the first router in the series receives the bit; the first router then transmits the bit, and shortly thereafter the second router receives the bit; and so on. Thus our bit, when traveling from source to destination, passes through a series of /transmitter-receiver pairs/. For each transmitter-receiver pair, the bit is sent by propogating electromagnetic waves or optical pulses across a *physical medium*. The physical medium can take many shapes and forms and does /not/ have to be of the same type for each transmitter-receiver pair along the path.

Examples of physical media include twisted-pair copper wire, coaxial cable, multimode fiber-optic cable, terrestrial radio spectrum, and satellite radio spectrum.

Physical media fall into two (2) categories:

  1. *guided media* - the waves are guided along a solid medium, such as fiber-optic cable, a twister-paid copper wire, or coaxial cable
  2. *unguided media* - the waves propogate in the atmosphere and in outer space, such as in a wireless LAN or a digital satellite channel

*** Twisted-Pair Copper Wire

The least expensive and most commonly used guided transmission medium is twisted-pair copper wire. For over a hundred years it has been used by telephone networks. In fact, more than 99 percent of the wired connections from the telephone handset to the local telephone switch use twisted-pair copper wire. Twisted pair consists of two (2) insulated copper wires, each about 1 mm thick, arranged in a regular spiral pattern. The wires are twisted together to reduce the electrical interference from similar pairs close by. Typically, a number of pairs are bundled together in a cable by wrapping the pairs in a protective shield. *A wire pair constitutes a single communication link*.

*Unshielded twisted pair (UTP)* is commonly used for computer networks within a building, that is, for LANs. Data rates for LANs using twisted pair today range from 10 Mbps to 10 Gbps. The data rates that can be achieved depend on the thickness of the wire and the distance between transmitter and receiver.

When fiber-optic technology emerged in the 1980s, many people disparaged twisted pair because of its relatively low bit rates. Some people even felt that fiber-optic technology would completely replace twisted pair. But twisted pair did not give up so easily. Modern twisted-pair technology, such as category 6a cable, can achieve data rates of 10 Gbps for distances up to a hundred meters. In the end, twisted pair has emerged as the dominant solution for high-speed LAN networking.

*** Coaxial Cable

Like twisted pair, coaxial cable consists of two copper conductors, but the two (2) conductors are *concentric rather than parallel*. With this construction and special insulation and shielding, coaxial cable can achieve high data transmission rates. Coaxial cable is quite common in cable television systems. As we saw earlier, cable television systems have recently been coupled with cable modems to provide residential users with internet access at rates of tens of Mbps. In cable television and cable internet access, the transmitter shifts the digital signal to a specific frequency band, and the resulting analog signal is sent from the transmitter to one or more receivers. Coaxial cable can be used as a guided *shared medium*. Specifically, a number of end systems can be connected directly to the cable, with each of the end systems receiving whatever is sent by the other end system.

*** Fiber Optics

An optical fiber is a thin, flexible medium that conducts pulses of light, with each pulse representing a bit. A single optical fiber can support tremendous bit rates, up to tens or even hundreds of gigabits per second. They are immune to electromagnetic interference, have very low signal attenuation up to 100 kilometers, and are very hard to tap. These characteristics have made fiber optics the preferred long-haul guided transmission media, particularly for overseas links. Many of the long-distance telephone networks in the US and elsewhere now use fiber optics exclusively. Fiber optics is also prevalent in the backbone of the internet. However (!), the high cost of optical devices - such as transmitters, receivers, and switches - has hindered their deployment for short-haul transport, such as in LAN or into the home in a residential access network. The Optical Carrier (OC) standard link speeds range from 51.8 Mbps to 39.8 Gbps; these specifications are often referred to as OC-/n/, where the link speed equals /n/ \infty 51.8 Mbps. Standards in use today include OC-1, OC-3, OC-12, OC-24, OC-48, OC-96, OC-192, OC-768.

*** Terrestrial Radio Channels

Radio channels carry signals in the electromagnetic spectrum. They are an attractive medium because they require *no* physical wire to be installed, can penetrate walls, provide connectivity to a mobile user, and can potentially carry a signal for long distances. The characteristics of a radio channel depend significantly on the propagation environment and the distance over which a signal is to be carried. Environmental considerations determine path loss and shadow fading (which decrease the signal strength as the signal travels over a distance and around/through obstructing objects), multipath fading (due to signal reflection off of interfering objects), and interference (due to other transmissions and electromagnetic signals).

Terrestrial radio channels can be broadly classified into three (3) groups:

  1. those that operate over very short distance (e.g., with one or two meters);
  2. those that operate in local areas, typically spanning from ten to a few hundred meters;
  3. and those that operate in the wide area, spanning tens of kilometers.

*** Satellite Radio Channels

A communication satellite links two or more Earth-based microwave transmitter/receivers, known as *ground stations*. The satellite receives transmissions on one frequency band, regenerates the signal using a repeater (discussed below), and transmits the signal on another frequency. Two (2) types of satellites are used in communications:

  1. *geostationary satellites*, and
  2. *low-earth orbiting (LEO) satellites*.

Geostationary satellites permanently remain above the same spot on Earth. This stationary presence is achieved by placing the satellite in orbit at 36,000 kilometers above Earth's surface. This huge distance from ground station through satellite back to ground station introduces a substantial signal propagation delay of 280 milliseconds. Nevertheless, satellite links, which can operate at speeds of hundred of Mbps, are often used in areas without access to DSL or cable-based internet access.

LEO satellites are placed much closer to Earth and *do not* remain permanently above one spot on Earth. They rotate around Earth (just as the Moon does) and may communicate with each other, as well as with ground stations. To provide continuous coverage to an area, many atellites need to be placed in orbit. There currently many low-altitude communication systems in development. LEO satellite technology may be used for internet access sometime in the future.

** The Network Core

Having examined the internet's edge, let us now delve more deeply inside the network core - the mesh of packet switches and links that interconnects the internet's end systems.

*** Packet Switching

In a network application, end systems exchange *messages* with each other. Messages can contain anything the application designer wants. Messages may perform a control function (for example, the "Hi" messages in our handshaking example from earlier) or can contain data, such as an e-mail message, a JPEG image, or an MP3 audio file. To send a message from a source end system to a destination end system, the source breaks long messages into smaller chunks of data known as *packets*. Between source and destination, each packet travels through communication links and *packet switches* (for which there are two (2) predominant types, *routers* and *link-layer switches*). Packets are transmitted over each communication link at a rate equal to the /full/ transmission rate of the link. So, if a source end system or a packet switch is sending a packet of /L/ bits over a link with transmission rate /R/ bits/sec, then the time to transmit the packet is /L/R/ seconds.

**** Store-and-Forward Transmission

Most packet switches use *store-and-forward transmission* at the inputs to the links. Store-and-forward transmission means that the packet switch must receive the entire packet before it can begin to transmit the first bit of the packet onto the outbound link. To explore store-and-forward transmission in more detail, consider a simple network consisting of two (2) end systems connected by a single router. A router will typically have many incident links, since its job is to switch an incoming packet onto an outgoing link; in this simple example, the router has the rather simple task of transferring a packet from one (input) link to the only other attached link.

...

Let's now consider the general case of sending one packet from source to destination over a path consisting of /N/ links each of rate /R/ (thus, there are /N-1/ routers between source and destination). Applying the same logic as from the (not included) example, we see that the end-to-end delay is:

#+begin_src latex
\[ d_{end-to-end} = N \frac{L}{R} \]
#+end_src

**** Queuing Delays and Packet Loss

Each packet switch has multiple links attached to it. For each attached link, the packet switch has an *output buffer* (also called an *output queue*), which stores packets that the router is about to send into that link. *The output buffers play a key role in packet switching*. If an arriving packet needs to be transmitted onto a link but finds the link busy with the transmission of another packet, the arriving packet must wait in the output buffer. Thus, in addition to the store-and-forward delays, /packets suffer output buffer queuing delays/. These delays are variable and depend on the level of congestion in the network. Since the amount of buffer space is finite, an arriving packet may find that the buffer is completely full with other packets waiting for transmission. In this case, *packet loss* will occur - either the arriving packet or one of the already-queued packets will be dropped.

**** Forwarding Tables and Routing Protocols

Earlier, we said that a router takes a packet arriving on one of its attached communication links and forwards that packet onto another one of its attached communication links. /But how does the router determine which link it should forward the packet onto/? Packet forwarding is actually done in different ways in different types of computer networks. Here, we briefly describe how it is done in the internet.

In the internet, every end system has an address called an *IP address*. When a source end system wants to send a packet to a destination end system, the source includes the destination's IP address in the packet's header (!). *As with postal addresses, this address has a hierarchical structure*. When a packet arrives at a router in the network, the router examines a portion of the packet's destination address and forwards the packet to an adjacent router. More specifically, each router has a *forwarding table* that maps destination addresses (or portions of the destination addresses) to that router's outbound links. When a packet arrives at a router, the router examines the address and searches its forwarding table, using this destination address, to find the appropriate outbound link. The router then directs the packet to this outbound link.

The end-to-end routing process is analogous to a car driver who does *not* use maps but instead prefers to ask for directions.

We just learned that a router uses a packet's destination address to index a forwarding table and determine the appropriate outbound link. But this statement begs yet another question: /How do forwarding tables get set/? Are they configured by hand in each and every router, or does the internet use a more automated procedure? This issue will be studied in depth in Chapter 5 ... but the whet your appetite here, we'll note now that the internet has a number of special *routing protocols* that are used to automatically set the forwarding tables. A routing protocol may, for example, determine the shortest path from each router to each destination and use the shortest path results to configure the forwarding tables in the routers.

*** Circuit Switching

There are two (2) fundamental approaches to moving data through a network of links and switches:

  - *circuit switching*, and
  - *packet switching*.

Having covered packet-switched networks in the previous subsection, we now turn our attention to circuit-switched networks.

In circuit-switched networks, the resources needed along a path (buffers, link transmission rate) to provide for communication between end systems are /reserved/ for the duration of the communication session between the end systems. In packet-switched networks, these resources are /not/ reserved; a session's messages use the resources on demand and, as a consequence, may have to wait (that is, /queue/) for access to a communication link.

Traditional telephone networks are examples of circuit-switched networks. Consider what happens when one person wants to send information (voice or facsimile) to another over a telephone network. Before the sender can send the information, the network must establish a connection between the sender and the receiver. This is a /bona fide/ connection for which the switches on the path between the sender and receiver maintain connection state for the connection. In the jargon of telephony, this connection is called a *circuit*. When the network establishes the circuit, it also reserves a constant transmission rate in the network's links (representing a fraction of each link's transmission capacity) for the duration of the connection. Since a given transmission rate has been reserved for this sender-to-receiver connection, the sender can transfer the data to the receiver at the /guaranteed/ constant rate.

When two (2) hosts want to communicate, the network established a dedicated *end-to-end connection* between the two (2) hosts. Thus, in order for Host A to communicate with Host B, the network must first reserve one circuit on each of two links.

In contrast, consider what happens when one host wants to send a packet to another host over a packet-switched network, such as the internet. As with circuit-switching, the packet is transmitted over a series of communication links. But different from circuit switching, the packet is sent into the network without reserving any links whatsoever. If one of the links is congested because other packets need to be transmitted over the link at the same time, then the packet will have to wait in a buffer at the sending side of the transmission link and suffer a delay. *The internet makes its best effort to deliver packets in a timely manner, but it does not make any guarantee*.

*** Multiplexing in Circuit-Switched Networks

A circuit in a link is implemented with either *frequency-division multiplexing (FDM)* or *time-division multiplexing (TDM)*. With FDM, the frequency spectrum of a link is divided up among the connections established across the link. Specifically, the link dedicates a frequency band to each connection for the duration of the connection. In telephone networks, this frequency band typically has a width of 4 kHz (that is, 4,000 hertz or 4,000 cycles per second). The width of the band is called, not surprisingly, the *bandwidth*. FM radio stations also use FDM to share the frequency spectrum between 88 MHz and 108 MHz, with each station being allocated a specific frequency band.

For a TDM link, time is divided into frames of fixed duration, and each frame is divided into a fixed number of time slots. When the network establishes a connection across a link, the network dedicates one time slot in every frame to this connection. These slots are dedicated for the sole use of that connection, with one time slot available for use (in every frame) to transmit the connection's data.

Proponents of packet switching have always argued that circuit switching is wasteful because the dedicated circuits are idle during *silent periods*. For example, when one person in a telephone call stops talking, the idle network resources (frequency bands or time slots in the links along the connection's route) cannot be used by other ongoing connections. Proponents of packet switching also enjoy pointing out that establishing end-to-end circuits and reserving end-to-end transmission capacity is complicated and requires complex signaling software to coordinate the operation of the switches along the end-to-end path.

Critics of packet switching have often argued that packet switching is not suitable for real-time services because of its variable and unpredictable end-to-end delays (due primarily to variable and unpredictable queuing delays). Proponents of packet switching argue that (1) it offers better sharing of transmission capacity than circuit switching and (2) it is simpler, more efficient, and less costly to implement that circuit switching.

Circuit switching pre-allocates use of the transmission link regardless of demand, with allocated but unneeded link time going unused. Packet switching on the other hand allocates link use /on demand/. Link transmission capacity will be shared on a packet-by-packet basis only among those users who have packets that need to be transmitted over the link.

Although packet switching and circuit switching are both prevalent in today's telecommunication networks, the trend has certainly been in the direction of packet switching. Even many of today's circuit-switched telephone networks are slowly migrating toward packet switching. In particular, telephone networks often use packet switching for the expensive overseas portion of a telephone call.

** A Network of Networks

We saw earlier that end systems (PCs, smartphones, Web servers, mail servers, etc.) connect into the internet via an access ISP. The access ISP can provide either wired or wireless connectivity, using an array of access technologies including DSL, cable, FTTH, Wi-Fi, and cellular. Note that the access ISP does not have to be a telco or a cable company; instead it can be, for example, a university or a company. But connecting end users and content providers into an access ISP is only a small piece of solving the puzzle of connecting the billions of end systems that make up the internet. To complete this puzzle, the access ISPs themselves must be interconnected. This is done by creating a /network of networks/ - understanding this phrase is the key to understanding the internet.

Over the years, the network of networks that forms the internet has evolved into a very complex structure. Much of this evolution is driven by economics and national policy, rather than by performance considerations. In order to understand today's internet network structure, let's incrementally build a series of network structures, with each new structure being a better approximation of the complex internet that we have today. Recall that the overarching goal is to interconnect the access ISPs so that all end systems can send packets to each other. One naive approach would be to have each access ISP /directly/ connect with every other access ISP. Such a mesh design is, of course, much too costly for the access ISPs, as it would require each access ISP to have a separate communication link to each of the hundreds of thousands of other access ISPs all over the world.

Our first network structure, /Networks Structure 1/, interconnects all of the access ISPs with a /single global transit ISP/. Our (imaginary) global transit ISP is a network of routers and communication links that not only spans the globe, but also has at least one router near each of the hundreds of thousands of access ISPs. Of course, it would be very costly for the global ISP to build such an extensive network. To be profitable, it would naturally charge each of the access ISPs for connectivity, with the pricing reflecting (but not necessarily directly proportional to) the amount of traffic an access ISP exchanges with the global ISP. Since the access ISP pays the global transit ISP, the access ISP is said to be a *customer* and the global transit ISP is said to be the *provider*.

Now if some company builds and operates a global transit ISP that is profitable, then it is natural for other companies to build their own global transit ISPs and compete with the original global transit ISP. This leads to /Network Structure 2/. which consists of hundreds of thousands of access ISPs and /multiple/ global transit ISPs. The access ISPs certainly prefer Network Structure 2 over Network Structure 1 since they can now choose among the competing global transit providers as a function of their pricing and services. Note, however, that the global transit ISPs themselves /must interconnect/: otherwise access ISPs connected to one of the global transit providers would not be able to communicate with access ISPs connected to the other global transit provider.

Network Structure 2, just described, is a two-tier hierarchy with global transit providers residing at the top tier and access ISPs at the bottom tier. This assumes that global transit ISPs are not only capable of getting close to each and every access ISP, but also find it economically desirable to do so. In reality, although some ISPs do have impressive global coverage and do directly connect with many access ISPs, no ISP has presence in each and every city in the world. Instead, in any given region, there may be a *regional ISP* to which access ISPs in the region connect. Each regional ISP then connects to *tier-1 ISPs*. Tier-1 ISPs are similar to our (imaginary) global transit ISP; but tier-1 ISPs, which actually do exist, do not have a presence in every city in the world. There are approximately a dozen tier-1 ISPs, including Level 3 Communications, AT&T, Sprint, and NTT. Interestinglu, no group officially sanctions tier-1 status; as the saying goes - *if you have to ask if you're a member of a group, you're probably not*.

Returning to this network of networks, not only are there multiple competing tier-1 ISPs, there may be multiple competing regional ISPs in a region. In such a hierarchy, each access ISP pays the regional ISP to which it connects, and each regional ISP pays the tier-1 ISP to which it connects. (An access ISP can also connect directly to a tier-1 ISP, in which case it pays the tier-1 ISP.) Thus, there is customer-provider relationship at each level of the hierarchy. Note that the tier-1 ISPs do not pay anyone, as they are at the top of the hierarchy. To further complicate matters, in some regions, there may be a larger regional ISP (possibly spanning an entire country) to which the smaller regional ISPs in that region connect; the larger regional ISP then connects to a tier-1 ISP. For example, in China, there are access ISPs in each city, which connect to provincial ISPs, which in turn connect to national ISPs, which finally connect to tier-1 ISPs. We refer to this multi-tier hierarchy, which is still only a crude approximation of today's internet, as /Network Structure 3/.

To build a network that more closely resembles today's internet, we must add points of presence (PoPs), multi-homing, peering, and internet exchange points (IXPs) to the hierarchical Network Structure 3. PoPs exist in all levels of the hierarchy, except for the bottom (access ISP) level. A *PoP* is simply a group of one or more routers (at the same location) in the provider's network where customer ISPs can connect into the provider ISP. For a customer network to connect to a provider's PoP, it can lease a high-speed link from a third-party telecommunications provider to directly connect one of its routers to a router at the PoP. Any ISP (except for tier-1 ISPS) may choose to *multi-home*, that is, to connect to two or more provider ISPs. So, for example, an access ISP may multi-home with two regional ISPs, or it may multi-home with two regional ISPs and also with a tier-1 ISP. Similarly, a regional ISP amy multi-home with multiple tier-1 ISPs. When an ISP multi-homes, it can continue to send and receive packets into the internet even if one of its providers has a failure.

As we just learned, customer ISPs pay their provider ISPs to obtain global internet connectivity. The amount that a customer ISP pays a provider ISP reflects the amount of traffic it exchanges with the provider. To reduce these costs, a pair of nearby ISPs at the same level of the hierarchy can *peer*, that is, they can directly connect their networks together so that all traffic between them passes over the direct connection rather than through upstream intermediaries. When two ISPs peer, it is typically settlement-free, that is,neither ISP pays the other. As noted earlier, tier-1 ISPs also peer with one another, settlement-free. Along these same lines, a third-party company can create an *Internet Exchange Point (IXP)*, which is a meeting point where multiple ISPs can peer together. An IXP is typically in a stand-alone building with its own switches. There are over 400 IXPs in the internet today. We refer to this ecosystem - consisting of access ISPs, regional ISPs, tier-1 ISPs, PoPs, multi-homing, peering, and IXPs - as /Network Structure 4/.

We now finally arrive at /Network Structure 5/, which describes today's internet. Network Structure 5 builds on top of Network Structure 4 by adding *content-provider networks*. Google is currently one of the leading examples of such a content-provider network. As of this writing, it is estimated that Google has 50 to 100 data centers distributed across North America, Europe, Asia, South America, and Australia. Some of these data centers house over one hundred thousand servers, while other data centers are smaller, housing only hundreds of servers. The Google data centers are all interconnected via Google's private TCP/IP network, which spans the entire globe but is nevertheless separate from the public internet. Importantly, the Google private network only carries traffic  to/from Google servers. The Google private network attempts to "bypass" the upper tiers of the internet by peering (settlement free) with lower-tier ISPs, either by directly connecting with them at IXPs. However, because many access ISPs can still only be reached by transiting through tier-1 networks, the Google network also connects to tier-1 ISPs, and pays those ISPs for the traffic it exchanges with them. By creating its own network, a content-provider not only reduces its payments to upper-tier ISPs, but also has a greater control of how its services are ultimately delivered to end users.

In summary, today's internet - a network of networks - is complex, consisting of a dozen or so tier-1 ISPs and hundreds of thousands of lower-tier ISPs. The ISPs are diverse in their coverage, with some spanning multiple continents and oceans, and others limited to narrow geographic regions. The lower-tier ISPs connect to the higher-tier ISPs, and the higher-tier ISPS interconnect with one another. Users and content providers are customers of lower-tier ISPs, and lower-tier ISPs are customer of higher-tier ISPs. In recent years, major content providers have also created their own networks and connect directly into lower-tier ISPs where possible.

** Delay, Loss, and Throughput in Packet-Switched Networks

Back in Section 1.1, we said that the internet can be viewed as an infrastructure that provides services to distributed applications running on end systems. Ideally, we would like internet services to be able to move as much data as we want between any two end systems, instantaneously, without any loss of data. Alas, this is a lofty goal, one that is unachievable in reality. Instead, computer networks necessarily constrain throughput (the amount of data per second that can be transferred) between end systems, introduce delays between end systems, and can actually lose packets. On one hand, it is unfortunate that the physical laws of reality introduce delays and loss as well as constrain throughput. On the other hand, because computer networks have these problems, there are many fascinating issues surrounding how to deal with the problems.

In this section, we'll begin to examine and quantify delay, loss, and throughput in computer networks.

Recall that a packet starts in a host (the source), passes through a series of routers, and ends its jounrey in another host (the destination). As a packet travels from one node (host or router) to the subsequent node (host or router) along this path, the packet suffers from several types of delays at /each/ node along the path. The most important of these delays are the *nodal processing delay*. *queuing delay*, *transmission delay*, and *propagation delay*; together, these delays accumulate to give a *total nodal delay*. The performance of many internst applications - such as search, Web browsing, e-mail, maps, instant messaging, and voice-over IP - are greatly affected by network delays. In order to acquire a deep understanding of packet switching and computer networks, we must understand the nature and importance of these delays.

*** Types of Delay

**** Processing delay

The time required to examine the packet's header and determine where to direct the packet is part of the *processing delay*. The processing delay can also include other factors, such as the time needed to check for bit-level errors in the packet that occurred in transmitting the packet's bits from the upstream node to the associated router. Processing delays in high-speed routers are typically on the order of microseconds or less.

**** Queuing Delay

At the queue, the packet experiences a *queuing delay* as it waits to be transmitted onto the link. The length of the queuing delay of a specific packet will depend on the number of earlier-arriving packets that are queued and waiting for transmission onto the link. If the queue is empty and no other packet is currently being transmitted, then our packet's queuing delay will be zero. On the other hand, if the traffic is heavy and many other packets are also waiting to be transmitted, the queuing delay will be long. We will see shortly that the number of packets than an arriving packet might expect to find is a function of the intensity and nature of the traffic arriving at the queue. Queuing delays can be on the order of microseconds to milliseconds in practice.

**** Transmission Delay
